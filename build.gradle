plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
//	id 'io.spring.dependency-management' version '1.1.6'
}

bootJar.enabled = false

repositories {
	mavenCentral()
}

subprojects {
	group = 'yeogi'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}


	repositories {
		mavenCentral()
	}


	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'com.google.guava:guava:33.2.1-jre'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'com.mysql:mysql-connector-j'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		// QueryDSL
		implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		// Kafka 의존성 추가
		implementation 'org.springframework.kafka:spring-kafka'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':lets-gathering') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-security'

		implementation 'org.springframework.boot:spring-boot-starter-actuator' // Actuator
		implementation 'io.micrometer:micrometer-registry-prometheus' // Micrometer Prometheus Registry
	}
}

project(':lets-recommendation') {
//	bootJar.enabled = false
//	jar.enabled = true
}
